{"version":3,"sources":["Home.js","index.js"],"names":["App","useState","tooltipContent","setTooltipContent","keys","Object","genre_data","data","values","cells","i","push","Cell","onMouseOver","onClick","value","preview_urls","window","open","fill","color","genre","length","CustomTooltip","active","payload","label","className","style","backgroundColor","ScatterChart","width","height","margin","top","right","bottom","left","CartesianGrid","vertical","horizontal","XAxis","hide","type","dataKey","YAxis","Tooltip","content","Scatter","name","ReactDOM","render","StrictMode","Home","document","getElementById"],"mappings":"khxtHAmEeA,MA9Df,WASE,IATc,IAAD,EAC+BC,mBAAS,IADxC,mBACNC,EADM,KACUC,EADV,KAGTC,EAAOC,OAAOD,KAAKE,GACnBC,EAAOF,OAAOG,OAAOF,GAIrBG,EAAQ,GARC,WASJC,GACPD,EAAME,KACJ,cAACC,EAAA,EAAD,CACEC,YAAa,kBAAMV,EAAkBC,EAAKM,KAC1CI,QAAS,kBAWIC,EAXYR,EAAKG,GAAGM,aAAa,QAYlDC,OAAOC,KAAK,iCAAmCH,GADjD,IAAmBA,GATbI,KAAMZ,EAAKG,GAAGU,OAJhB,eAGeb,EAAKG,GAAGW,UALlBX,EAAI,EAAGA,EAAIH,EAAKe,OAAQZ,IAAM,EAA9BA,GAmBT,IAAMa,EAAgB,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,OAAQC,EAAqB,EAArBA,QAAqB,EAAZC,MACxC,OAAIF,GAAUC,GAAWA,EAAQH,OAE7B,qBAAKK,UAAU,iBAAiBC,MAAO,CAACC,gBAAiB,SAAzD,SACE,mBAAGF,UAAU,OAAb,SAAqBzB,MAKpB,MAGT,OACE,eAAC4B,EAAA,EAAD,CACEC,MAAO,KACPC,OAAQ,KACRC,OAAQ,CACNC,IAAK,GACLC,MAAO,GACPC,OAAQ,GACRC,KAAM,IAPV,UAUE,cAACC,EAAA,EAAD,CAAeC,UAAU,EAAOC,YAAY,IAC5C,cAACC,EAAA,EAAD,CAAOC,MAAM,EAAMC,KAAK,SAASC,QAAQ,SACzC,cAACC,EAAA,EAAD,CAAOH,MAAM,EAAMC,KAAK,SAASC,QAAQ,QACzC,cAACE,EAAA,EAAD,CAASC,QAAS,cAACxB,EAAD,MAClB,cAACyB,EAAA,EAAD,CAASC,KAAK,OAAO1C,KAAMA,EAAMY,KAAK,UAAtC,SACGV,QCxDTyC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.6b74edbd.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { ScatterChart, Scatter, Cell, Tooltip, CartesianGrid, XAxis, YAxis } from 'recharts';\nimport genre_data from \"./everynoise-scrape.json\"; // added 1\n// import genre_data from \"./test\"\n\nfunction App() {\n  const [tooltipContent, setTooltipContent] = useState(\"\");\n\n  let keys = Object.keys(genre_data);\n  let data = Object.values(genre_data);\n\n  // console.log(data);\n\n  let cells = []\n  for (let i = 0; i < data.length; i++) {\n    cells.push(\n      <Cell \n        onMouseOver={() => setTooltipContent(keys[i])} \n        onClick={() => playGenre(data[i].preview_urls[0])}\n        key={`cell-${data[i].genre}`} \n        fill={data[i].color} \n      />\n    )\n  }\n\n  function previewGenre(value) {\n\n  }\n\n  function playGenre(value) {\n    window.open(\"https://p.scdn.co/mp3-preview/\" + value);\n  }\n\n  const CustomTooltip = ({ active, payload, label }) => {\n    if (active && payload && payload.length) {\n      return (\n        <div className=\"custom-tooltip\" style={{backgroundColor: \"white\"}}>\n          <p className=\"desc\">{tooltipContent}</p>\n        </div>\n      );\n    }\n  \n    return null;\n  };\n\n  return (\n    <ScatterChart\n      width={1600}\n      height={1600}\n      margin={{\n        top: 20,\n        right: 20,\n        bottom: 20,\n        left: 20,\n      }}\n    >\n      <CartesianGrid vertical={false} horizontal={false} />\n      <XAxis hide={true} type=\"number\" dataKey=\"left\" />\n      <YAxis hide={true} type=\"number\" dataKey=\"top\" />\n      <Tooltip content={<CustomTooltip />} />\n      <Scatter name=\"data\" data={data} fill=\"#8884d8\">\n        {cells}\n      </Scatter>\n    </ScatterChart>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Home from './Home';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Home />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}