{"version":3,"sources":["GenreScatterChart.js","App.js","index.js"],"names":["GenreScatterChart","useState","tooltipContent","setTooltipContent","keys","Object","genre_data","data","values","cells","i","push","Cell","onMouseOver","onClick","value","preview_urls","window","open","fill","color","genre","length","CustomTooltip","active","payload","label","className","ScatterChart","width","height","margin","top","right","bottom","left","CartesianGrid","vertical","horizontal","XAxis","hide","type","dataKey","YAxis","Tooltip","content","Scatter","name","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"khxtHAKe,SAASA,IAOtB,IAP2C,IAAD,EACEC,mBAAS,IADX,mBACnCC,EADmC,KACnBC,EADmB,KAGtCC,EAAOC,OAAOD,KAAKE,GACnBC,EAAOF,OAAOG,OAAOF,GAErBG,EAAQ,GAN8B,WAOjCC,GACPD,EAAME,KACJ,cAACC,EAAA,EAAD,CACEC,YAAa,kBAAMV,EAAkBC,EAAKM,KAC1CI,QAAS,kBAOIC,EAPYR,EAAKG,GAAGM,aAAa,QAQlDC,OAAOC,KAAK,iCAAmCH,GADjD,IAAmBA,GALbI,KAAMZ,EAAKG,GAAGU,OAJhB,eAGeb,EAAKG,GAAGW,UALlBX,EAAI,EAAGA,EAAIH,EAAKe,OAAQZ,IAAM,EAA9BA,GAeT,IAAMa,EAAgB,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,OAAQC,EAAqB,EAArBA,QAAqB,EAAZC,MACxC,OAAIF,GAAUC,GAAWA,EAAQH,OAE7B,qBAAKK,UAAU,iBAAf,SACGzB,IAIA,MAGT,OACE,eAAC0B,EAAA,EAAD,CACEC,MAAO,KACPC,OAAQ,KACRC,OAAQ,CACNC,IAAK,GACLC,MAAO,GACPC,OAAQ,GACRC,KAAM,IAPV,UAUE,cAACC,EAAA,EAAD,CAAeC,UAAU,EAAOC,YAAY,IAC5C,cAACC,EAAA,EAAD,CAAOC,MAAM,EAAMC,KAAK,SAASC,QAAQ,SACzC,cAACC,EAAA,EAAD,CAAOH,MAAM,EAAMC,KAAK,SAASC,QAAQ,QACzC,cAACE,EAAA,EAAD,CAASC,QAAS,cAACtB,EAAD,MAClB,cAACuB,EAAA,EAAD,CAASC,KAAK,OAAOxC,KAAMA,EAAMY,KAAK,UAAtC,SACGV,O,aClDM,SAASuC,IACtB,OACE,qCACE,sBAAKrB,UAAU,QAAf,UACE,qBAAKA,UAAU,YAAf,wBACA,qDAEF,cAAC,oBAAD,UACE,cAAC3B,EAAD,SCPRiD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACH,EAAD,MAEFI,SAASC,eAAe,W","file":"static/js/main.89fd3e90.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { ScatterChart, Scatter, Cell, Tooltip, CartesianGrid, XAxis, YAxis } from 'recharts';\nimport genre_data from \"./everynoise-scrape.json\"; // last added data-2\n// import genre_data from \"./test\"\n\nexport default function GenreScatterChart() {\n  const [tooltipContent, setTooltipContent] = useState(\"\");\n\n  let keys = Object.keys(genre_data);\n  let data = Object.values(genre_data);\n\n  let cells = [];\n  for (let i = 0; i < data.length; i++) {\n    cells.push(\n      <Cell \n        onMouseOver={() => setTooltipContent(keys[i])} \n        onClick={() => playGenre(data[i].preview_urls[0])}\n        key={`cell-${data[i].genre}`} \n        fill={data[i].color} \n      />\n    )\n  }\n\n  function playGenre(value) {\n    window.open(\"https://p.scdn.co/mp3-preview/\" + value);\n  }\n\n  const CustomTooltip = ({ active, payload, label }) => {\n    if (active && payload && payload.length) {\n      return (\n        <div className=\"custom-tooltip\">\n          {tooltipContent}\n        </div>\n      );\n    }\n    return null;\n  };\n\n  return (\n    <ScatterChart\n      width={1600}\n      height={1600}\n      margin={{\n        top: 20,\n        right: 20,\n        bottom: 20,\n        left: 20,\n      }}\n    >\n      <CartesianGrid vertical={false} horizontal={false} />\n      <XAxis hide={true} type=\"number\" dataKey=\"left\" />\n      <YAxis hide={true} type=\"number\" dataKey=\"top\" />\n      <Tooltip content={<CustomTooltip />} />\n      <Scatter name=\"data\" data={data} fill=\"#8884d8\">\n        {cells}\n      </Scatter>\n    </ScatterChart>\n  );\n}","import React from \"react\";\nimport GenreScatterChart from './GenreScatterChart';\nimport { MapInteractionCSS } from 'react-map-interaction';\n\nexport default function App() {\n  return (\n    <>\n      <div className=\"brand\">\n        <div className=\"app-title\">EverySound</div>\n        <div>by Vincent Tieu</div>\n      </div>\n      <MapInteractionCSS>\n        <GenreScatterChart />\n      </MapInteractionCSS>\n    </>\n  )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}