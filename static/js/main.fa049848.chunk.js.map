{"version":3,"sources":["utils.js","components/About.js","components/MainMenu.js","components/AudioPlayerMenu.js","components/MusicMap.js","components/SearchBar.js","App.js","index.js"],"names":["reduceNList","arr","n","result","Array","len","length","taken","RangeError","x","Math","floor","random","printReadableString","str","split","map","word","toUpperCase","substring","join","About","props","setAboutToggle","background","useRef","className","style","overflowY","onClick","e","target","current","ref","href","rel","MainMenu","refreshMap","Tooltip","title","IconButton","preventDefault","color","fontSize","AudioPlayerMenu","activeGenreData","audioPlayer","shuffle","skip","renderedAudioPlayer","searchToggle","setSearchToggle","beastMode","setBeastMode","genre","window","open","replace","isShuffle","MusicMap","triggerAudioPlayer","NGenresList","useState","tooltipContent","setTooltipContent","cells","CustomTooltip","active","payload","label","i","push","Cell","fill","stroke","strokeWidth","onMouseOver","onTouchStart","ScatterChart","width","height","margin","top","right","bottom","left","CartesianGrid","vertical","horizontal","XAxis","hide","type","dataKey","YAxis","content","Scatter","name","data","filterOptions","createFilterOptions","limit","SearchBar","searchValue","setSearchValue","genreDict","allGenresList","key","backgroundColor","padding","marginTop","onSubmit","undefined","Autocomplete","options","getOptionLabel","option","renderOption","renderInput","params","TextField","marginRight","onKeyDown","value","App","setNGenresList","aboutToggle","activeUrl","preview_urls","setActiveGenreData","setAudioPlayer","absolute","newActiveGenreData","j","paused","play","pause","triggerAudioPlayerOnEnded","useEffect","interval","setInterval","clearInterval","AudioPlayer","forwardRef","volume","controls","onEnded","onError","src","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fa049848.chunk.js","sourcesContent":["export function reduceNList(arr, n) {\n  var result = new Array(n),\n    len = arr.length,\n    taken = new Array(len);\n  if (n > len)\n    throw new RangeError(\"reduceNList: more elements taken than available\");\n  while (n--) {\n    var x = Math.floor(Math.random() * len);\n    result[n] = arr[x in taken ? taken[x] : x];\n    taken[x] = --len in taken ? taken[len] : len;\n  }\n  return result;\n}\n\nexport function printReadableString(str) {\n  if (str === \"\") {\n    return str;\n  }\n  const words = str.split(\" \");\n  const result = words\n    .map((word) => {\n      return word[0].toUpperCase() + word.substring(1);\n    })\n    .join(\" \");\n\n  return result;\n}\n\nexport function isTouchDevice() {\n  return (\n    \"ontouchstart\" in window ||\n    navigator.maxTouchPoints > 0 ||\n    navigator.msMaxTouchPoints > 0\n  );\n}\n","import { useRef } from \"react\";\n\nexport default function About(props) {\n  const { setAboutToggle } = props;\n  const background = useRef();\n  return (\n    <div\n      className=\"about\"\n      style={{overflowY: \"auto\"}}\n      onClick={(e) => {\n        if (e.target === background.current) {\n          setAboutToggle(false);\n        }\n      }}\n    >\n      <div className=\"background\" ref={background} />\n      <div className=\"about-description\">\n        <div className=\"width-500-less\">\n          <div className=\"font-size-64\">MusicMap</div>\n          <div>by Vincent Tieu</div>\n          <br />\n          <a\n            href=\"https://github.com/vincentktieu101/MusicMap\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            https://github.com/vincentktieu101/ MusicMap\n          </a>\n          <br />\n          <br />\n          <div>\n            MusicMap is a visual way to explore 5,000+ genres and over 500,000\n            songs! Scroll to zoom and click to drag across the map. Once you're\n            ready, select a genre and listen to 30 second samples of that genre.\n          </div>\n          <br />\n          <div>\n            Generally, the type of genres are organized by color and location.\n            Blue describes instrumentals. Pink describes electronic music/EDM.\n            Orange genres are rock. Red genres are metal. Green and Yellow\n            genres describe everything from indie to pop. Genres closer together\n            sound similar while genres further away sound less similar.\n          </div>\n          <br />\n          <div>Some other features...</div>\n          <div>Refresh Map: Get a new map of 400 genres of the pool 5000+</div>\n          <div>Search: Look for a specific genre within app</div>\n          <div>Dance Mode: Makes the genre nodes dance!</div>\n          <div>Spotify Search: Searches for specific genre on Spotify</div>\n          <div>Shuffle Random Genre: Changes the genre after each sample</div>\n          <div>Skip: Skips current sample</div>\n          <br />\n          <div>\n            MusicMap is built in ReactJS, Material-UI, Recharts, and\n            React-Map-Interaction. The data was gathered by using a scrapping\n            tool on{\" \"}\n            <a href=\"https://everynoise.com/\" target=\"_blank\" rel=\"noreferrer\">\n              https://everynoise.com/.\n            </a>{\" \"}\n            This app was designed primarily for desktop but also works well on\n            mobile.\n          </div>\n          <br />\n          <div>\n            Thanks so much for visiting my app! I hope you find this app as fun\n            as I did making it. I really can not understate how much I\n            appreciate it, especially as a budding web/software developer :)\n          </div>\n          <br />\n          <div>App last updated 3/24/21</div>\n          <br />\n          <br />\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n}\n","import Tooltip from \"@material-ui/core/Tooltip\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\nimport MenuBookIcon from \"@material-ui/icons/MenuBook\";\n\nexport default function MainMenu(props) {\n  const { setAboutToggle, refreshMap } = props;\n  return (\n    <div className=\"brand\">\n      <div className=\"font-size-48\">\n        MusicMap\n        <Tooltip\n          title={<div className=\"custom-tooltip-black\">Refresh Map</div>}\n        >\n          <IconButton\n            onClick={(e) => {\n              e.preventDefault();\n              refreshMap();\n            }}\n          >\n            <RefreshIcon style={{ color: \"white\" }} />\n          </IconButton>\n        </Tooltip>\n      </div>\n      by Vincent Tieu\n      <Tooltip title={<div className=\"custom-tooltip-black\">Read Details</div>}>\n        <IconButton\n          onClick={(e) => {\n            e.preventDefault();\n            setAboutToggle(true);\n          }}\n        >\n          <MenuBookIcon fontSize=\"small\" style={{ color: \"white\" }} />\n        </IconButton>\n      </Tooltip>\n    </div>\n  );\n}\n","import Tooltip from \"@material-ui/core/Tooltip\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport RepeatIcon from \"@material-ui/icons/Repeat\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport FastForwardIcon from \"@material-ui/icons/FastForward\";\nimport LibraryMusicIcon from \"@material-ui/icons/LibraryMusic\";\nimport InsertEmoticonIcon from \"@material-ui/icons/InsertEmoticon\";\nimport EmojiEmotionsIcon from \"@material-ui/icons/EmojiEmotions\";\n\nimport { printReadableString } from \"../utils\";\n\nexport default function AudioPlayerMenu(props) {\n  const {\n    activeGenreData,\n    audioPlayer,\n    shuffle,\n    skip,\n    renderedAudioPlayer,\n    searchToggle,\n    setSearchToggle,\n    beastMode,\n    setBeastMode,\n  } = props;\n\n  return (\n    <div>\n      {activeGenreData.genre !== \"\" ? (\n        <div>\n          <div className=\"font-size-20\">\n            Genre: {printReadableString(activeGenreData.genre)}\n          </div>\n          <br />\n          {renderedAudioPlayer}\n          <br />\n          <div>\n            <Tooltip title={<div className=\"custom-tooltip-black\">Search</div>}>\n              <IconButton\n                onClick={(e) => {\n                  e.preventDefault();\n                  setSearchToggle(true);\n                }}\n              >\n                <SearchIcon\n                  style={searchToggle ? { color: \"green\" } : { color: \"white\" }}\n                />\n              </IconButton>\n            </Tooltip>\n            <Tooltip\n              title={<div className=\"custom-tooltip-black\">Dance Mode</div>}\n            >\n              <IconButton\n                onClick={(e) => {\n                  e.preventDefault();\n                  setBeastMode(!beastMode);\n                }}\n              >\n                {beastMode ? (\n                  <InsertEmoticonIcon style={{ color: \"green\" }} />\n                ) : (\n                  <EmojiEmotionsIcon style={{ color: \"white\" }} />\n                )}\n              </IconButton>\n            </Tooltip>\n            <Tooltip\n              title={\n                <div className=\"custom-tooltip-black\">\n                  Search for Genre Playlist on Spotify\n                </div>\n              }\n            >\n              <IconButton\n                onClick={(e) => {\n                  e.preventDefault();\n                  window.open(\n                    `https://open.spotify.com/search/the%20sound%20of%20${activeGenreData.genre.replace(\n                      / /g,\n                      \"%20\"\n                    )}`,\n                    \"_blank\" // <- This is what makes it open in a new window.\n                  );\n                }}\n              >\n                <LibraryMusicIcon style={{ color: \"white\" }} />\n              </IconButton>\n            </Tooltip>\n            <Tooltip\n              title={\n                <div className=\"custom-tooltip-black\">\n                  Shuffle Random Genres\n                </div>\n              }\n            >\n              <IconButton\n                onClick={(e) => {\n                  e.preventDefault();\n                  shuffle();\n                }}\n              >\n                <RepeatIcon\n                  style={\n                    audioPlayer.isShuffle\n                      ? { color: \"green\" }\n                      : { color: \"white\" }\n                  }\n                />\n              </IconButton>\n            </Tooltip>\n            <Tooltip title={<div className=\"custom-tooltip-black\">Skip</div>}>\n              <IconButton\n                onClick={(e) => {\n                  e.preventDefault();\n                  skip();\n                }}\n              >\n                <FastForwardIcon style={{ color: \"white\" }} />\n              </IconButton>\n            </Tooltip>\n          </div>\n        </div>\n      ) : (\n        <div className=\"font-size-32\">\n          <div>Each Circle is a Genre</div>\n          <div>Zoom/Drag to Navigate!</div>\n        </div>\n      )}\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport {\n  ScatterChart,\n  Scatter,\n  Cell,\n  Tooltip,\n  CartesianGrid,\n  XAxis,\n  YAxis,\n} from \"recharts\";\nimport { MapInteractionCSS } from \"react-map-interaction\";\n\nimport { printReadableString } from \"../utils\";\n\nexport default function MusicMap(props) {\n  const { activeGenreData, triggerAudioPlayer, beastMode } = props;\n  let { NGenresList } = props;\n  const [tooltipContent, setTooltipContent] = useState(\"\");\n\n  let cells = [];\n\n  const CustomTooltip = ({ active, payload, label }) => {\n    if (active && payload && payload.length && !beastMode) {\n      return (\n        <div className=\"custom-tooltip font-size-24\">\n          {`Genre: ${printReadableString(tooltipContent)}`}\n        </div>\n      );\n    }\n    return null;\n  };\n\n  if (!beastMode) {\n    for (let i = 0; i < NGenresList.length; i++) {\n      cells.push(\n        <Cell\n          onMouseOver={() => setTooltipContent(NGenresList[i].genre)}\n          onClick={() => triggerAudioPlayer(i)}\n          onTouchStart={() => triggerAudioPlayer(i)}\n          key={`cell-${NGenresList[i].genre}`}\n          fill={NGenresList[i].color}\n          stroke={NGenresList[i].color}\n          strokeWidth={activeGenreData.genre === NGenresList[i].genre ? 25 : 8}\n        />\n      );\n    }\n  } else {\n    for (let i = 0; i < NGenresList.length; i++) {\n      cells.push(\n        <Cell\n          key={`cell-${NGenresList[i].genre}`}\n          fill={NGenresList[i].color}\n          stroke={NGenresList[i].color}\n          strokeWidth={8}\n        />\n      );\n    }\n  }\n\n  return (\n    <MapInteractionCSS>\n      <ScatterChart\n        width={2200}\n        height={1400}\n        margin={{\n          top: 20,\n          right: 20,\n          bottom: 20,\n          left: 20,\n        }}\n      >\n        <CartesianGrid vertical={false} horizontal={false} />\n        <XAxis hide={true} type=\"number\" dataKey=\"left\" />\n        <YAxis hide={true} type=\"number\" dataKey=\"top\" />\n        <Tooltip content={<CustomTooltip />} />\n        <Scatter name=\"data\" data={NGenresList} fill=\"#8884d8\">\n          {cells}\n        </Scatter>\n      </ScatterChart>\n    </MapInteractionCSS>\n  );\n}\n","import React from \"react\";\nimport { useState, useRef } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { createFilterOptions } from \"@material-ui/lab/Autocomplete\";\n\nimport allGenresList from \"../everynoise/all-genres-list.json\";\n\nconst filterOptions = createFilterOptions({\n  limit: 100,\n});\n\nexport default function SearchBar(props) {\n  const { setSearchToggle, triggerAudioPlayer } = props;\n  const [searchValue, setSearchValue] = useState(\"\");\n  const background = useRef();\n\n  let genreDict = {};\n  for (let i = 0; i < allGenresList.length; i++) {\n    genreDict[allGenresList[i].genre] = allGenresList[i].key;\n  }\n\n  return (\n    <div\n      className=\"search\"\n      onClick={(e) => {\n        if (e.target === background.current) {\n          setSearchToggle(false);\n        }\n      }}\n    >\n      <div className=\"background\" ref={background} />\n      <div\n        style={{\n          backgroundColor: \"white\",\n          width: \"350px\",\n          padding: \"4px\",\n          margin: \"4px\",\n          marginTop: \"20px\",\n        }}\n      >\n        <form\n          onSubmit={(e) => {\n            e.preventDefault();\n            if (genreDict[searchValue] !== undefined) {\n              triggerAudioPlayer(genreDict[searchValue], true);\n            }\n          }}\n        >\n          <Autocomplete\n            filterOptions={filterOptions}\n            options={allGenresList}\n            getOptionLabel={(option) => option.genre}\n            renderOption={(option) => (\n              <div\n                style={{ width: \"100%\", height: \"100%\" }}\n                onClick={(e) => {\n                  e.preventDefault();\n                  triggerAudioPlayer(option.key, true);\n                }}\n              >\n                {option.genre}\n              </div>\n            )}\n            style={{ padding: \"4px\", margin: \"4px\" }}\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                style={{\n                  backgroundColor: \"white\",\n                  marginRight: \"4px\",\n                  padding: \"4px\",\n                  fontSize: \"32px\",\n                }}\n                label=\"Genre\"\n                onKeyDown={(e) => {\n                  setSearchValue(e.target.value);\n                }}\n              />\n            )}\n          />\n        </form>\n      </div>\n    </div>\n  );\n}\n","import { useState, useEffect, useRef, forwardRef } from \"react\";\n\nimport allGenresList from \"./everynoise/all-genres-list.json\";\nimport { reduceNList } from \"./utils\";\nimport About from \"./components/About\";\nimport MainMenu from \"./components/MainMenu\";\nimport AudioPlayerMenu from \"./components/AudioPlayerMenu\";\nimport MusicMap from \"./components/MusicMap\";\nimport SearchBar from \"./components/SearchBar\";\n\nexport default function App() {\n  const NODES_ON_MAP = 400;\n  const [NGenresList, setNGenresList] = useState(\n    reduceNList(allGenresList, NODES_ON_MAP)\n  );\n  const [aboutToggle, setAboutToggle] = useState(false);\n  const [searchToggle, setSearchToggle] = useState(false);\n  const [beastMode, setBeastMode] = useState(false);\n  const [activeGenreData, setActiveGenreData] = useState({\n    key: 0,\n    genre: \"\",\n    activeUrl: \"\",\n    color: \"\",\n    preview_urls: [],\n  });\n  const [audioPlayer, setAudioPlayer] = useState({\n    ref: useRef(),\n    key: 0,\n    isShuffle: false,\n  });\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (beastMode) {\n        setNGenresList(reduceNList(allGenresList, NODES_ON_MAP));\n      }\n    }, 1500);\n    return () => clearInterval(interval);\n  }, [beastMode]);\n\n  function refreshMap() {\n    setNGenresList(reduceNList(allGenresList, NGenresList.length));\n  }\n  \n  function triggerAudioPlayer(i, absolute = false) {\n    if (activeGenreData.genre === NGenresList[i].genre) {\n      if (audioPlayer.ref.current.paused) {\n        audioPlayer.ref.current.play();\n      } else {\n        audioPlayer.ref.current.pause();\n      }\n      return;\n    }\n\n    let newActiveGenreData;\n    if (absolute) {\n      newActiveGenreData = allGenresList[i];\n    } else {\n      newActiveGenreData = NGenresList[i];\n    }\n    let j = Math.floor(Math.random() * newActiveGenreData.preview_urls.length);\n    setActiveGenreData({ ...newActiveGenreData, activeUrl: `https://p.scdn.co/mp3-preview/${newActiveGenreData.preview_urls[j]}` });\n    setAudioPlayer({ ...audioPlayer, key: audioPlayer.key+1 });\n  }\n\n  function triggerAudioPlayerOnEnded() {\n    let newActiveGenreData;\n    if (audioPlayer.isShuffle) {\n      const i = Math.floor(Math.random() * NGenresList.length);\n      newActiveGenreData = NGenresList[i];\n    } else {\n      newActiveGenreData = activeGenreData;\n    }\n    let j = Math.floor(Math.random() * newActiveGenreData.preview_urls.length);\n    setActiveGenreData({ ...newActiveGenreData, activeUrl: `https://p.scdn.co/mp3-preview/${newActiveGenreData.preview_urls[j]}`});\n    setAudioPlayer({ ...audioPlayer, key: audioPlayer.key+1 });\n  }\n\n  function shuffle() {\n    if (!audioPlayer.isShuffle) {\n      const i = Math.floor(Math.random() * NGenresList.length);\n      let j = Math.floor(Math.random() * NGenresList[i].preview_urls.length);\n      setActiveGenreData({ ...NGenresList[i], activeUrl: `https://p.scdn.co/mp3-preview/${NGenresList[i].preview_urls[j]}`});\n      setAudioPlayer({ ...audioPlayer, key: audioPlayer.key+1, isShuffle: !audioPlayer.isShuffle });\n    } else {\n      setAudioPlayer({ ...audioPlayer, isShuffle: !audioPlayer.isShuffle });\n    }\n  }\n\n  function skip() {\n    triggerAudioPlayerOnEnded();\n  }\n\n  const renderedAudioPlayer = (\n    <AudioPlayer\n      ref={audioPlayer.ref}\n      activeGenreData={activeGenreData}\n      audioPlayer={audioPlayer}\n      triggerAudioPlayerOnEnded={triggerAudioPlayerOnEnded}\n    />\n  );\n\n  return (\n    <div>\n      {aboutToggle && <About setAboutToggle={setAboutToggle} />}\n      {searchToggle && (\n        <SearchBar\n          className=\"hidden\"\n          setSearchToggle={setSearchToggle}\n          triggerAudioPlayer={triggerAudioPlayer}\n        />\n      )}\n      {!(aboutToggle || searchToggle) && (\n        <MainMenu setAboutToggle={setAboutToggle} refreshMap={refreshMap} />\n      )}\n      {/* conditional className because component should remain rendered during aboutToggle */}\n      <div className={aboutToggle ? \"audio-player hidden\" : \"audio-player\"}>\n        <AudioPlayerMenu\n          activeGenreData={activeGenreData}\n          audioPlayer={audioPlayer}\n          shuffle={shuffle}\n          skip={skip}\n          searchToggle={searchToggle}\n          setSearchToggle={setSearchToggle}\n          beastMode={beastMode}\n          setBeastMode={setBeastMode}\n          renderedAudioPlayer={renderedAudioPlayer}\n        />\n      </div>\n      <MusicMap\n        NGenresList={NGenresList}\n        activeGenreData={activeGenreData}\n        beastMode={beastMode}\n        triggerAudioPlayer={triggerAudioPlayer}\n      />\n    </div>\n  );\n}\n\nconst AudioPlayer = forwardRef((props, ref) => {\n  const { activeGenreData, audioPlayer, triggerAudioPlayerOnEnded } = props;\n  useEffect(() => {\n    if (ref) {\n      ref.current.volume = 0.15;\n      ref.current.play();\n    }\n  }, [ref, activeGenreData, audioPlayer]);\n  return (\n    <audio\n      ref={ref}\n      key={audioPlayer.key}\n      controls\n      onEnded={triggerAudioPlayerOnEnded}\n      onError={triggerAudioPlayerOnEnded}\n    >\n      <source src={activeGenreData.activeUrl} />\n    </audio>\n  );\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}